<?php
error_reporting(E_ALL);
ini_set('display_errors', TRUE);
ini_set('display_startup_errors', TRUE);
global $base_url; // Will point to http://www.example.com
/**
 * Implements hook_menu().

 */

function installer_response_form_menu()
{

	$items = array();
  $items['upload-installer'] = array(
    'title' => t('Upload your Installer'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
      'upload_osdag_installer_form'
    ),
    'access arguments' => array(
      'upload osdag installer'
    ),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'upload_installer.inc'
  );
  $items['download-instructions'] = array(
    'title' => 'Download Instruction',
    'description' => 'Download Instructions',
    'page callback' => 'download_osdag_instructions_file',
    'access arguments' => array(
      'access installer response form'
    ),
    'type' => MENU_CALLBACK,
  );
	$items['download-installer'] = array(
		'title' => t('Download Installer'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
      'data_submission_form'
    ),
		'access arguments' => array(
			'access installer response form'
		),
	);
  $items['skip/download-installer'] = array(
    'title' => 'Download Installer',
    'description' => 'Download Installer',
    'page callback' => 'skip_download_osdag_installer',
    'access arguments' => array(
      'access installer response form'
    ),
    'type' => MENU_CALLBACK,
    //'file' => 'download.inc'
  );
  $items['admin/settings/installers'] = array(
    'title' => 'Installer Settings',
    'description' => 'Installer Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
      'installer_response_settings_form'
    ),
    'access arguments' => array(
      'administer installer settings'
    ),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'settings.inc'
  );
	return $items;
}

function installer_response_form_permission(){
	return array(
             'access installer response form' => array(
             'title' => t('access installer response form'),
             'restrict access' => TRUE,
             ),
             'upload osdag installer' => array(
             'title' => t('Upload osdag installer'),
             'restrict access' => TRUE,
             ),
             'administer installer settings' => array(
             'title' => t('administer installer settings'),
             'restrict access' => TRUE,
             ),
    );
}

/*function download_osdag_installer(){
	$url_id = arg(2);
  $release_date = arg(1);
  //var_dump($url_id . ' ' . $release_date);die;
  $query = db_select('installer_files');
  $query->fields('installer_files');
  $query->condition('release_date', $release_date);
  $query->condition('id', $url_id);
  $query->range(0, 1);
  $installer_q = $query->execute();
  $installer_data = $installer_q->fetchObject();
  //var_dump($installer_data);die;
    $page_content = "";	
      $installer_response_form = drupal_get_form("data_submission_form", $);
          $page_content .= drupal_render($installer_response_form);
	global $installer_url;
	switch ($url_id) {
		case 'l1':
			$installer_url = 'https://static.fossee.in/osdag/installation-files/Osdag_ubuntu_installer_v2018.06.a.3839.tar.gz';
			$installer_response_form = drupal_get_form("data_submission_form", $installer_url);
        	$page_content .= drupal_render($installer_response_form);
			break;
		case 'w1':
			$installer_url = 'https://static.fossee.in/osdag/installation-files/Osdag_windows_installer_v2018.06.a.3839.zip';
			$installer_response_form = drupal_get_form("data_submission_form", $installer_url);
        	$page_content .= drupal_render($installer_response_form);
			break;
		
		default:
			# code...
			break;
	}
	return $page_content;
}*/

function data_submission_form($form, &$form_state) {
	$url_id = arg(2);
  $release_date = arg(1);
  //var_dump($url_id . ' ' . $release_date);die;
  //var_dump($installer_data);die;
  //var_dump($download_installer);die;
  $form['life_story'] = array(
  '#type' => 'item',
  '#attributes' => array('readonly' => 'readonly'),
  '#markup' => t('
Osdag®️ license and its resources are completely free of cost!

Osdag®️ and the Osdag logo are the registered trademarks of the Indian Institute of Technology, Bombay

Please fill the Osdag User Information Form’ given below. Your data is completely safe with IIT Bombay and shall be used only for internal quality assessment by the team, sending timely e-mail notification(s) regarding Osdag events/workshops, installer updates/patches,  etc.

We will not spam you with frequent emails!'),
  
);
  $form['name_title'] = array(
		'#type' => 'select',
		'#title' => t('Title'),
		'#options' => array(
			'Dr' => 'Dr',
			'Prof' => 'Prof',
			'Mr' => 'Mr',
			'Ms' => 'Ms'
		),
		'#required' => TRUE
	);
 $form['first_name'] = array(
    '#type' => 'textfield',
    '#title' => t('First Name'),
    '#required' => TRUE,
    '#description' => "Please enter your first name.",
    '#size' => 255,
    '#maxlength' => 255,
  );
$form['last_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Last Name'),
    '#required' => TRUE,
    '#description' => "Please enter your Last name.",
    '#size' => 255,
    '#maxlength' => 255,
  );

$form['institute'] = array(
    '#type' => 'textfield',
    '#title' => t('Institution/Organisation/Company/School (Full name)'),
    '#required' => TRUE,
    '#description' => "Please enter your Institution/Organisation/Company/School (Full name).",
    '#size' => 100,
    '#maxlength' => 255,
  );

$form['email_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Email (Official, if available)'),
    '#size' => 255,
    '#maxlength' => 255,
    '#description' => "Please enter your Email ID",
    '#required' => TRUE,
    
  );

$form['designation'] = array(
    '#type' => 'textfield',
    '#title' => t('Designation'),
    '#required' => TRUE,
    '#description' => "Please enter your Designation.",
    '#size' => 255,
    '#maxlength' => 255,
  );
$form['installer_id'] = array(
	'#type' => 'hidden',
	//'#title' => t('Installer URL'),
	'#value' => $url_id
	);

$form['release_date'] = array(
  '#type' => 'hidden',
  //'#title' => t('Installer URL'),
  '#value' => $release_date
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    //'#submit' => array('data_submission_form_submit'),
  );

   $form['skip'] = array(
    '#type' => 'item',
    '#markup' => l(t('Skip'), 'skip/download-installer/' . $release_date . '/'. $url_id)
   /* '#type' => 'submit',
    '#value' => t('Skip'),
    '#limit_validation_errors' => array(),
    '#submit' => array('data_submission_form_skip_submit'),*/
  );  

 return $form;
}

/*function data_submission_form_validate($form, &$form_state) {
  //Validation of first name
  $form_state['values']['first_name'] = trim($form_state['values']['first_name']);
  if ($form_state['values']['first_name'] != '')
  {
    if (strlen($form_state['values']['first_name']) > 32)
    {
      form_set_error('first_name', t('Maximum charater limit is 32 charaters only, please check the length of the First Name'));
    } //strlen($form_state['values']['name']) > 250
    else if (strlen($form_state['values']['first_name']) < 5)
    {
      form_set_error('first_name', t('Minimum charater limit is 5 charaters, please check the length of the Name'));      
    }
    else if(preg_match('/[\^£$%&*()}{@#~?><>.:;`|=_+¬]/', $form_state['values']['first_name']))
      form_set_error('first_name', t('Special characters are not allowed for Name'));
   //strlen($form_state['values']['name']) < 10
  } //$form_state['values']['name'] != ''
  else
  {
    form_set_error('first_name', t('Name shoud not be empty'));
  }


//Validation of last name
  $form_state['values']['last_name'] = trim($form_state['values']['last_name']);
  if ($form_state['values']['last_name'] != '')
  {
    if (strlen($form_state['values']['last_name']) > 32)
    {
      form_set_error('last_name', t('Maximum charater limit is 32 charaters only, please check the length of the Last Name'));
    } //strlen($form_state['values']['name']) > 250
    else if (strlen($form_state['values']['last_name']) < 2)
    {
      form_set_error('last_name', t('Minimum charater limit is 5 charaters, please check the length of the Name'));
    }
    else if(preg_match('/[\^£$%&*()}{@#~?><>.:;`|=_+¬]/', $form_state['values']['last_name']))
      form_set_error('last_name', t('Special characters are not allowed for Name'));
   //strlen($form_state['values']['name']) < 10
  } //$form_state['values']['name'] != ''
  else
  {
    form_set_error('last_name', t('Name shoud not be empty'));
  }


//Validation of Organisation name
  $form_state['values']['org_name'] = trim($form_state['values']['org_name']);
  if ($form_state['values']['org_name'] != '')
  {
    if (strlen($form_state['values']['org_name']) > 32)
    {
      form_set_error('org_name', t('Maximum charater limit is 32 charaters only, please check the length of the Name'));
    } //strlen($form_state['values']['name']) > 250
    else if (strlen($form_state['values']['org_name']) < 5)
    {
      form_set_error('org_name', t('Minimum charater limit is 5 charaters, please check the length of the Name'));
      
    }
    else if(preg_match('/[\^£$%&*()}{@#~?><>.:;`|=_+¬]/', $form_state['values']['org_name']))
      form_set_error('org_name', t('Special characters are not allowed for Name'));
   //strlen($form_state['values']['name']) < 10
  } //$form_state['values']['name'] != ''
  else
  {
    form_set_error('org_name', t('Name shoud not be empty'));
  }


//Validation of Email_ID
  if(!filter_var($form_state['values']['email_id'], FILTER_VALIDATE_EMAIL)){
     form_set_error('email_id', t('Invalid Email Address'));
    }

  //validation of Description
  $form_state['values']['des'] = trim($form_state['values']['des']);
  if ($form_state['values']['des'] != '')
  {
    if (strlen($form_state['values']['des']) >= 2000)
    {
      form_set_error('des', t('Maximum charater limit is 2000 charaters only, please check the length'));
    } //strlen($form_state['values']['description']) >= 50
    else if (strlen($form_state['values']['des']) < 1)
    {
      form_set_error('des', t('Minimum charater limit is 1 charaters, please check the length'));
    } //strlen($form_state['values']['description']) < 1
  } //$form_state['values']['description'] != ''
  else
  {
    form_set_error('des', t('Designation should not be empty'));
  }
}*/

function data_submission_form_submit($form, &$form_state, $no_js_use = FALSE){

   $v = $form_state["values"];
   $name_title = $v['name_title'];
   $first_name = trim($v['first_name']);
   $last_name = trim($v['last_name']);
   $institute = trim($v['institute']);
   $email_id = trim($v['email_id']);
   $designation = trim($v['designation']);
   $url_id = $v['installer_id'];
   $release_date = $v['release_date'];
    $query = db_select('installer_files');
  $query->fields('installer_files');
  $query->condition('release_date', $release_date);
  $query->condition('id', $url_id);
  $query->range(0, 1);
  $installer_q = $query->execute();
  $installer_data = $installer_q->fetchObject();
   //var_dump($installer_data);die;
   $result = "INSERT INTO {installer_response}
    (
    name_title,
     first_name,
     last_name,
     institute,
     email_id,
     designation
    ) VALUES
    (
    :name_title,
      :first_name,
      :last_name,
      :institute,
      :email_id,
      :designation
    )";

      $args = array(
      		":name_title" => $name_title,
              ":first_name" => $first_name,
              ":last_name" => $last_name,
              ":institute" => $institute,
              ":email_id" => $email_id,
              ":designation" => $designation,
      );

    $query = db_query($result, $args);
    $root_path = installer_directory_path();
    $filepath = $installer_data->installer_path;
      header('Content-Type: application/zip');
      header('Content-disposition: attachment; filename="' . $filepath . '"');
      header('Content-Length: ' . filesize($root_path . $filepath));
      header("Content-Transfer-Encoding: Binary");
      header('Expires: 0');
      header('Pragma: no-cache');
      //ob_end_flush();
      ob_clean();
      flush();
      //readfile($filename);
      if(@readfile($root_path . $filepath)){
        exit;
        drupal_goto('');
        drupal_set_message(t('The form has been submitted.'),'status');
        
      }
      else{
        drupal_set_message(t('Could not download file'), 'error');
      }
      //exit;
      //drupal_goto('');
      //drupal_set_message(t('The form has been submitted.'),'status'); 
    //  header('Location:installers');
    //  drupal_set_message(t("The form has been submitted.")); 
 
  }

 
/*function data_submission_form_skip_submit($form, &$form_state) 
{
  //var_dump($form_state);die;
  $v = $form_state["values"];
  $url_id = $v[0];
   $release_date = $v[1];
   var_dump($v);die;
  $query = db_select('installer_files');
  $query->fields('installer_files');
  $query->condition('release_date', $release_date);
  $query->condition('id', $url_id);
  $query->range(0, 1);
  $installer_q = $query->execute();
  $installer_data = $installer_q->fetchObject();
      $root_path = installer_directory_path();
    $filepath = $installer_data->installer_path;
      header('Content-Type: application/zip');
      header('Content-disposition: attachment; filename="' . $filepath . '"');
      header('Content-Length: ' . filesize($root_path . $filepath));
      header("Content-Transfer-Encoding: Binary");
      header('Expires: 0');
      header('Pragma: no-cache');
      //ob_end_flush();
      ob_clean();
      flush();
      //readfile($filename);
      if(readfile($root_path . $filepath)){
        drupal_set_message(t('The form has been submitted.'),'status');
        drupal_goto('');
      }
      else{
        drupal_set_message(t('Could not download file'), 'error');
      }
}*/

function skip_download_osdag_installer()
{
  $url_id = arg(3);
  $release_date = arg(2);
  $root_path = installer_directory_path();$query = db_select('installer_files');
  $query->fields('installer_files');
  $query->condition('release_date', $release_date);
  $query->condition('id', $url_id);
  $query->range(0, 1);
  $installer_q = $query->execute();
  $installer_data = $installer_q->fetchObject();
  $filepath = $installer_data->installer_path;
      header('Content-Type: application/zip');
      header('Content-disposition: attachment; filename="' . $filepath . '"');
      header('Content-Length: ' . filesize($root_path . $filepath));
      header("Content-Transfer-Encoding: Binary");
      header('Expires: 0');
      header('Pragma: no-cache');
      //ob_end_flush();
      ob_clean();
      flush();
      //readfile($filename);
      if(@readfile($root_path . $filepath)){
        exit();
        drupal_goto('');
        drupal_set_message(t('The form has been submitted.'),'status');
        
      }
      else{
        drupal_set_message(t('Could not download file'), 'error');
      }
}

function download_osdag_instructions_file()
{
  $url_id = arg(2);
  $release_date = arg(1);
  $root_path = installer_directory_path();$query = db_select('installer_files');
  $query->fields('installer_files');
  $query->condition('release_date', $release_date);
  $query->condition('id', $url_id);
  $query->range(0, 1);
  $installer_q = $query->execute();
  $installer_data = $installer_q->fetchObject();
  $filepath = $installer_data->instruction_file_path;
  //var_dump($filepath);die;
      header('Content-Type: application/txt');
      header('Content-disposition: attachment; filename="' . $filepath . '"');
      header('Content-Length: ' . filesize($root_path . $filepath));
      header("Content-Transfer-Encoding: Binary");
      header('Expires: 0');
      header('Pragma: no-cache');
      //ob_end_flush();
      ob_clean();
      flush();
      //readfile($filename);
      if(@readfile($root_path . $filepath)){
        exit();
        drupal_goto('');
        //drupal_set_message(t('The form has been submitted.'),'status');
        
      }
      else{
        drupal_set_message(t('Could not download file'), 'error');
      }
}

function installer_directory_path()
{
  return $_SERVER['DOCUMENT_ROOT'] . base_path() . 'data/osdag/installers/';
}